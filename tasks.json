{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Run C",
      "type": "shell",
      "command": "sh",
      "args": [
        "-c",
        "gcc \"${file}\" -o \"${fileDirname}/${fileBasenameNoExtension}\" && \"${fileDirname}/${fileBasenameNoExtension}\" < input.txt > output.txt"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run C file with input/output redirection"
    },
    {
      "label": "Run C++",
      "type": "shell",
      "command": "sh",
      "args": [
        "-c",
        "g++ \"${file}\" -o \"${fileDirname}/${fileBasenameNoExtension}\" && \"${fileDirname}/${fileBasenameNoExtension}\" < input.txt > output.txt"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run C++ file with input/output redirection"
    },
    {
      "label": "Run Java",
      "type": "shell",
      "command": "sh",
      "args": [
        "-c",
        "javac \"${file}\" && java -cp \"${fileDirname}\" \"${fileBasenameNoExtension}\" < input.txt > output.txt"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run Java file with input/output redirection"
    },
    {
      "label": "Run Python",
      "type": "shell",
      "command": "python3",
      "args": [
        "${file}"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run Python file (no redirection)"
    },
    {
      "label": "Run JavaScript",
      "type": "shell",
      "command": "node",
      "args": [
        "${file}"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run JavaScript file (no redirection)"
    },
    {
      "label": "Run Go",
      "type": "shell",
      "command": "go",
      "args": [
        "run",
        "${file}"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run Go file (no redirection)"
    },
    {
      "label": "Run Rust",
      "type": "shell",
      "command": "sh",
      "args": [
        "-c",
        "rustc \"${file}\" -o \"${fileDirname}/${fileBasenameNoExtension}\" && \"${fileDirname}/${fileBasenameNoExtension}\" < input.txt > output.txt"
      ],
      "group": "build",
      "problemMatcher": [],
      "detail": "Run Rust file with input/output redirection"
    },
    {
      "type": "cppbuild",
      "label": "C/C++: clang build active file",
      "command": "/usr/bin/clang",
      "args": [
        "-fcolor-diagnostics",
        "-fansi-escape-codes",
        "-g",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}"
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "Task generated by Debugger."
    }
  ]
}